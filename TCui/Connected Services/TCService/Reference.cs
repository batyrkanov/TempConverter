//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TCui.TCService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TCService.ITCservice")]
    public interface ITCservice {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCservice/CelsiumToFahrenheit", ReplyAction="http://tempuri.org/ITCservice/CelsiumToFahrenheitResponse")]
        double CelsiumToFahrenheit(double celsium);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCservice/CelsiumToFahrenheit", ReplyAction="http://tempuri.org/ITCservice/CelsiumToFahrenheitResponse")]
        System.Threading.Tasks.Task<double> CelsiumToFahrenheitAsync(double celsium);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCservice/CelsiumToKelvin", ReplyAction="http://tempuri.org/ITCservice/CelsiumToKelvinResponse")]
        double CelsiumToKelvin(double celsium);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCservice/CelsiumToKelvin", ReplyAction="http://tempuri.org/ITCservice/CelsiumToKelvinResponse")]
        System.Threading.Tasks.Task<double> CelsiumToKelvinAsync(double celsium);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCservice/FahrenheitToCelsium", ReplyAction="http://tempuri.org/ITCservice/FahrenheitToCelsiumResponse")]
        double FahrenheitToCelsium(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCservice/FahrenheitToCelsium", ReplyAction="http://tempuri.org/ITCservice/FahrenheitToCelsiumResponse")]
        System.Threading.Tasks.Task<double> FahrenheitToCelsiumAsync(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCservice/FahrenheitToKelvin", ReplyAction="http://tempuri.org/ITCservice/FahrenheitToKelvinResponse")]
        double FahrenheitToKelvin(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCservice/FahrenheitToKelvin", ReplyAction="http://tempuri.org/ITCservice/FahrenheitToKelvinResponse")]
        System.Threading.Tasks.Task<double> FahrenheitToKelvinAsync(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCservice/KelvinToCelsium", ReplyAction="http://tempuri.org/ITCservice/KelvinToCelsiumResponse")]
        double KelvinToCelsium(double kelvin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCservice/KelvinToCelsium", ReplyAction="http://tempuri.org/ITCservice/KelvinToCelsiumResponse")]
        System.Threading.Tasks.Task<double> KelvinToCelsiumAsync(double kelvin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCservice/KelvinToFahrenheit", ReplyAction="http://tempuri.org/ITCservice/KelvinToFahrenheitResponse")]
        double KelvinToFahrenheit(double kelvin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITCservice/KelvinToFahrenheit", ReplyAction="http://tempuri.org/ITCservice/KelvinToFahrenheitResponse")]
        System.Threading.Tasks.Task<double> KelvinToFahrenheitAsync(double kelvin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITCserviceChannel : TCui.TCService.ITCservice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TCserviceClient : System.ServiceModel.ClientBase<TCui.TCService.ITCservice>, TCui.TCService.ITCservice {
        
        public TCserviceClient() {
        }
        
        public TCserviceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TCserviceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TCserviceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TCserviceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double CelsiumToFahrenheit(double celsium) {
            return base.Channel.CelsiumToFahrenheit(celsium);
        }
        
        public System.Threading.Tasks.Task<double> CelsiumToFahrenheitAsync(double celsium) {
            return base.Channel.CelsiumToFahrenheitAsync(celsium);
        }
        
        public double CelsiumToKelvin(double celsium) {
            return base.Channel.CelsiumToKelvin(celsium);
        }
        
        public System.Threading.Tasks.Task<double> CelsiumToKelvinAsync(double celsium) {
            return base.Channel.CelsiumToKelvinAsync(celsium);
        }
        
        public double FahrenheitToCelsium(double fahrenheit) {
            return base.Channel.FahrenheitToCelsium(fahrenheit);
        }
        
        public System.Threading.Tasks.Task<double> FahrenheitToCelsiumAsync(double fahrenheit) {
            return base.Channel.FahrenheitToCelsiumAsync(fahrenheit);
        }
        
        public double FahrenheitToKelvin(double fahrenheit) {
            return base.Channel.FahrenheitToKelvin(fahrenheit);
        }
        
        public System.Threading.Tasks.Task<double> FahrenheitToKelvinAsync(double fahrenheit) {
            return base.Channel.FahrenheitToKelvinAsync(fahrenheit);
        }
        
        public double KelvinToCelsium(double kelvin) {
            return base.Channel.KelvinToCelsium(kelvin);
        }
        
        public System.Threading.Tasks.Task<double> KelvinToCelsiumAsync(double kelvin) {
            return base.Channel.KelvinToCelsiumAsync(kelvin);
        }
        
        public double KelvinToFahrenheit(double kelvin) {
            return base.Channel.KelvinToFahrenheit(kelvin);
        }
        
        public System.Threading.Tasks.Task<double> KelvinToFahrenheitAsync(double kelvin) {
            return base.Channel.KelvinToFahrenheitAsync(kelvin);
        }
    }
}
